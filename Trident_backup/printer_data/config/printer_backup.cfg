[include moonraker_obico_macros.cfg]
[include mainsail.cfg]
[include aux_fan.cfg]
[include EBB.cfg]
[include Hotkey.cfg]
[include clean.cfg]
[include Knomi.cfg]
[include KAMP_Settings.cfg]
[include sensorless.cfg]
[include K-ShakeTune/*.cfg]
#[include PIS.cfg]


[exclude_object]

[force_move]
enable_force_move: True

[mcu host_mcu]
serial: /tmp/klipper_host_mcu

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_4D003A001851303439363932-if00
serial: /dev/ttyAMA0
baud: 250000
restart_method: command




[virtual_sdcard]
path: /home/sunny/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

#restart_method: command

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 6100			        #Max 4000
max_z_velocity: 25			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PE11
dir_pin: PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PA1
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: 0

position_endstop: 350
position_max: 350

##--------------------------------------------------------------------
homing_speed: 40  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

#    Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PE7
interpolate: True
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PB14
#driver_SGTHRS: 79
driver_SGTHRS: 89

[stepper_y]
##	Connected to Y-MOT (A Motor)
step_pin: PD8
dir_pin: PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: ^PA2 # Y-MAX
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0

position_endstop: 359
position_max: 359

##--------------------------------------------------------------------
homing_speed: 40  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

#	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PE15
interpolate: True
run_current: 1
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PB13
#driver_SGTHRS: 92
driver_SGTHRS: 105

[stepper_z]
step_pin: PD14
dir_pin: !PD13
enable_pin: !PD15
##T8x4 Lead Screws.  One rotation moves the bed 4mm 
##Change according to integrated steppers purchased
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 16
##  In Z- Position
endstop_pin: probe: z_virtual_endstop

##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
## All builds use same Max Z
position_max: 250

##--------------------------------------------------------------------
position_min: -10
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 5

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PD10
uart_address: 0
interpolate: True
run_current: 1
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E2-MOT Position
##	Z1 Stepper - Z Rear Motor
[stepper_z1]
step_pin: PE6
dir_pin: !PC13
enable_pin: !PE5
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC14
interpolate: True
run_current: 1
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##	In E1-MOT Position
##	Z2 Stepper - Z Right Motor
[stepper_z2]
step_pin: PD5
dir_pin: !PD6
enable_pin: !PD4
rotation_distance: 4
full_steps_per_rotation: 200
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PD7
interpolate: true
run_current: 1
hold_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

[extruder]
step_pin: EBBCan:gpio18
dir_pin: !EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16
gear_ratio: 50:10
rotation_distance: 22
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan:gpio27
control: pid
pid_Kp: 30.699
pid_Ki: 2.236
pid_Kd: 101.305
min_temp: 0
max_temp: 300
max_extrude_cross_section: 5

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.650
stealthchop_threshold: 999999

#####################################################################
#	Probe
#####################################################################

[probe]
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0
speed: 15
samples: 3
samples_result: median
sample_retract_dist: 10
samples_tolerance: 0.005 #0.006
samples_tolerance_retries: 3
#z_offset: -0.51

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    #{% set PROBE_TEMP = 150 %}
    #{% set MAX_TEMP = PROBE_TEMP + 5 %}
    #{% set ACTUAL_TEMP = printer.extruder.temperature %}
    #{% set TARGET_TEMP = printer.extruder.target %}
    
    #{% if "xyz" not in printer.toolhead.homed_axes %}
        #G28
    #{% endif %}
    
    #{% if TARGET_TEMP > PROBE_TEMP %}
        #G1 X350 Y175 F12000
        #AUX_FAN_ON
        #M106 S255
        #{ action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        #M109 S{PROBE_TEMP}
        #M106 S0
        #AUX_FAN_OFF
        #G1 X175 Y175 F12000
    #{% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        #{% if ACTUAL_TEMP > MAX_TEMP %}
            #G1 X350 Y175 F12000
            #AUX_FAN_ON
            #M106 S255
            #{ action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            #TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
            #M106 S0
            #AUX_FAN_OFF
            #G1 X175 Y175 F12000
        #{% endif %}
    #{% endif %}

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: PB4
sensor_type: Generic 3950 #NTC 100K MGB18-104F39050L32
sensor_pin: PB0 # Spider v2.x
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
control: pid
pid_kp = 40.772
pid_ki = 1.837
pid_kd = 226.287


#####################################################################
#	Fans
#####################################################################

[temperature_fan _electronics_fan]
pin: PB2
kick_start_time: 0.5
control: watermark # the type of hysteresis we are using
max_delta: 3.0 # fan turns on/off at 3Â° over/under target_temp
sensor_type: temperature_host # same as a temp_sensor
#sensor_mcu: mcu min_temp: 0
max_temp: 80 # just the valid temperature ranges
target_temp: 55 # the initial target temperature for the fan
min_temp:0
min_speed:0.3
max_speed:0.5

[controller_fan _stepper_fan]
pin: PA13
kick_start_time: 0.5
stepper: stepper_x, stepper_y
fan_speed: 1

[temperature_fan exhaust_fan]
pin: PC8
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
cycle_time:0.01
off_below:0.1
sensor_mcu: host_mcu
sensor_type: DS18B20
#serial_no: 28-3de10457d6b3
serial_no: 28-3de10457c629
min_temp: 0
max_temp: 70
target_temp: 35.0
control: watermark

#[temperature_sensor Raspberry_Pi]
#sensor_type: temperature_host
#min_temp: 0
#max_temp: 100

#####################################################################
# Filter Fan
#####################################################################

[fan_generic filter_fan]
pin: PA14
max_power: 1.0
shutdown_speed: 0
#cycle_time:
#hardware_pwm:
kick_start_time: 0.2
off_below: 0.25

[gcode_macro FILTER_FAN_ON]
gcode:
  SET_FAN_SPEED FAN=filter_fan SPEED=1.0

[gcode_macro FILTER_FAN_OFF]
gcode:
  SET_FAN_SPEED FAN=filter_fan SPEED=0

#####################################################################
#	LED Control
#####################################################################

[neopixel Chamber_LEDs]
##  Chamber Lighting - In 5V-RGB Position
pin: PD3
color_order: GRB
chain_count: 25
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.5
initial_white: 0.0


#####################################################################
#	Temperature Sensors
#####################################################################
[temperature_sensor chamber]
sensor_mcu: host_mcu
sensor_type: DS18B20
#serial_no: 28-3de10457c629, 28-3de10457d6b3
#serial_no: 28-3de10457c629
serial_no: 28-3de10457d6b3
min_temp: 0
max_temp: 100

[temperature_sensor Chamber_Average]
sensor_type: temperature_combined
sensor_list: temperature_sensor chamber, temperature_fan exhaust_fan
combination_method: mean
maximum_deviation: 999

#[temperature_sensor chamber_2]
#sensor_mcu: host_mcu
#sensor_type: DS18B20
#serial_no: 28-3de10457c629, 28-3de10457d6b3
#serial_no: 28-3de10457d6b3

[temperature_sensor spider]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100
#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[z_tilt]
z_positions:
	-46, 20
	175, 363
	396, 20
points:
	30, 5
	175, 340
	320, 5

speed: 120
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.005# 0.0075

[bed_mesh]
speed: 60
horizontal_move_z: 5
mesh_min: 35,26
mesh_max: 320, 308

probe_count: 5,5
#relative_reference_index: 24
algorithm: bicubic

#####################################################################
#   print_start macro
#####################################################################
  
[gcode_macro LEVEL_BED]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}
    CLEAN_NOZZLE
    Z_TILT_ADJUST
    M117
    BED_MESH_CALIBRATE

[gcode_macro M141]
gcode:
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="exhaust_fan" target={target_chamber}

[gcode_macro M191]
gcode:
    {% set target_chamber = params.CHAMBER|default("40")|int %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="exhaust_fan" target={target_chamber}

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    #M300 # beep
    G91
    G92 E0
    G1 E5 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    #M300
    #M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:    
    G1 X175 Y15 F12000
    G1 Z220 F1500
    M109 S250
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    #M300 # beep
    G92 E0
    G1 E5 F{speed} # purge
    G1 E-25 F{max_velocity} # fast-unload
    #M300
    #M300
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  #{% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  #{% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  #STATUS_HOMING         # Sets SB-leds to homing-mode
  M140 S{target_bed}
  M104 S150
  G28                   # Full home (XYZ)
  G90                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    #SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    #STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

    G1 X175 Y175 F12000 
    G1 Z125 F1500                   # Goes to center of the bed
    
    SET_LED LED="Chamber_LEDs" RED=1 GREEN=0.251 BLUE=0 SYNC=0 TRANSMIT=1
    AUX_FAN_ON
    FILTER_FAN_ON
    M190 S{target_bed} # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    AUX_FAN_OFF
    FILTER_FAN_OFF
    G28 Z
  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    #SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    #STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X175 Y175 F12000 
    G1 Z15 F1500                    # Goes to center of the bed
    SET_LED LED="Chamber_LEDs" RED=1 GREEN=0.251 BLUE=0 SYNC=0 TRANSMIT=1
    M190 S{target_bed}                                  # Sets the target temp for the bed
    #SET_DISPLAY_TEXT MSG="Soak for 5min"                # Displays info
    G4 P150000                                          # Waits 2.5 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  #SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info                                  # Heats the nozzle to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  #SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  #STATUS_LEVELING                          # Sets SB-leds to leveling-mode
                                    # Homes Z again after z_tilt_adjust

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  #SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  #STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  #quad_gantry_level               # Levels the buildplate via QGL
  #G28 Z                           # Homes Z again after QGL

  ##  Uncomment for Klicky auto-z
  #CALIBRATE_Z                                 # Calibrates Z-offset with klicky
  #SET_DISPLAY_TEXT MSG="Z-offset"             # Displays info

  ##  Uncomment for bed mesh (2 of 2)
  #SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  #STATUS_MESHING                     # Sets SB-leds to bed mesh-mode                          # Levels the buildplate via z_tilt_adjust
  SET_LED LED="Chamber_LEDs" RED=0 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1
  LEVEL_BED
  # Heats up the nozzle up to target via data from slicer
  #SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  #STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X175 Y175 F12000
  G1 Z15 F1500                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  SMART_PARK
  SET_LED LED="Chamber_LEDs" RED=1 GREEN=0.251 BLUE=0 SYNC=0 TRANSMIT=1
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  #SET_DISPLAY_TEXT MSG="Printer goes brr"          # Displays info
  #STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  #G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  #G0 Z0.4                                          # Raises Z to 0.4
  #G91                                              # Incremental positioning 
  #G1 X100 E20 F1000                                # Purge line
  #G90 # Absolut position
  SET_LED LED="Chamber_LEDs" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
  VORON_PURGE
  
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1 F1500
    G0 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z10 F1500                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X175 Y350 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    SET_LED LED="Chamber_LEDs" RED=0 GREEN=0 BLUE=1 SYNC=0 TRANSMIT=1

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    SET_LED LED="Chamber_LEDs" RED=1 GREEN=1 BLUE=0 SYNC=0 TRANSMIT=1
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    SET_LED LED="Chamber_LEDs" RED=1 GREEN=1 BLUE=1 SYNC=0 TRANSMIT=1
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  SET_LED LED="Chamber_LEDs" RED=1 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
  CANCEL_PRINT_BASE
  G0 Z5
  G28 X Y
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F3600                ; retract filament
  G91                            ; relative positioning
  G0 Z1 F1500
  G0 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
  TURN_OFF_HEATERS
  M107                           ; turn off fan
  G1 Z10 F1500                    ; move nozzle up 2mm
  G90                            ; absolute positioning
  G0  X175 Y350 F3600            ; park nozzle at rear
  BED_MESH_CLEAR

#[gcode_macro BED_CALIBRATE]
#description: runs multiple calibrations to probe bed.
#gcode:
  #CLEAN_NOZZLE
  #Z_TILT_ADJUST
#BED_MESH_CALIBRATE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.525
#*#
#*# [heater_bed]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.214693, -0.224693, -0.204693
#*# 	  -0.245943, -0.250943, -0.210943
#*# 	  -0.205943, -0.209693, -0.210943
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 125.0
#*# max_x = 225.0
#*# min_y = 125.0
#*# max_y = 225.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 63.6
#*# shaper_type_y = ei
#*# shaper_freq_y = 50.6
